version: "3"
services:
  app:
    container_name: golang-app
    build: .
    ports: 
        - 8080:8000
    restart: on-failure
    volumes:
        - api:/usr/src/app/
    depends_on:
        - postgres
    links:
        - redis
    networks:
        - fullstack
    environment:
        - DB_HOST=${DB_HOST}
        - DB_USER=${DB_USER}
        - DB_PASSWORD=${DB_PASSWORD}
        - DB_NAME=${DB_NAME}
        - DB_PORT=${DB_PORT}
        - PORT=8000

  postgres:
    image: postgres:latest
    container_name: db_postgres
    environment:
      - POSTGRES_USER=${DB_USER}  
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST} 
    ports:
      - '5432:5432'
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - fullstack
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
        - postgres
    ports:
      - "5050:80"
    networks:
      - fullstack
    restart: unless-stopped
  redis:
    image: redis
    networks:
        - fullstack  
    ports:
        - "6379:6379"
volumes:
  api:
  database_postgres:                  # Uncomment this when using postgres.
    # database_mysql:                   # Uncomment this when using mysql.

# Networks to be created to facilitate communication between containers
networks:
  fullstack:
    driver: bridge